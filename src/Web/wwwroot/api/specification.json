{
  "x-generator": "NSwag v14.2.0.0 (NJsonSchema v11.1.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Squawker API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/Squawks": {
      "get": {
        "tags": [
          "Squawks",
          "Squawks"
        ],
        "summary": "Returns a list of all squawks in the system",
        "operationId": "GetSquawks",
        "responses": {
          "200": {
            "description": "Returns the list of squawks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SquawkDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Squawks",
          "Squawks"
        ],
        "summary": "Creates a new squawk with rate limiting (one squawk per 20 seconds per user)",
        "operationId": "CreateSquawk",
        "requestBody": {
          "x-name": "command",
          "description": "The squawk creation details including content and user ID",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSquawkCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "201": {
            "description": "Returns the newly created squawk ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "If the squawk data is invalid (e.g., empty content, banned terms)"
          },
          "429": {
            "description": "If the rate limit is exceeded (one squawk per 20 seconds)"
          }
        }
      }
    },
    "/api/Squawks/{id}": {
      "get": {
        "tags": [
          "Squawks",
          "Squawks"
        ],
        "summary": "Gets a specific squawk by its unique identifier",
        "operationId": "GetSquawkById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the squawk",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested squawk",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SquawkDto"
                }
              }
            }
          },
          "404": {
            "description": "If the squawk is not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SquawkDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "content": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateSquawkCommand": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "content",
          "userId"
        ],
        "properties": {
          "content": {
            "type": "string",
            "description": "The text content of the squawk",
            "maxLength": 400,
            "minLength": 1
          },
          "userId": {
            "type": "string",
            "description": "The ID of the user creating this squawk",
            "format": "guid",
            "minLength": 1
          }
        }
      },
      "HttpValidationProblemDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProblemDetails"
          },
          {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "properties": {
              "errors": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      }
    }
  }
}